syntax(Package) "models/Ecore.ecore" {

	Package:element(EPackage) -> 
		ws(indent) "package" ws(space) IDENTIFIER:composite(name) ws(space)
		"{" ws(blockstart) 
			(PackageContents)*
		 ws(blockend) ws(indent) "}" ws(statement);
	
	PackageContents -> Package:composite(eSubpackages);
	PackageContents -> Class:composite(eClassifiers);
	PackageContents -> DataType:composite(eClassifiers);
	
	Class:element(EClass) ->
		ws(indent) 
		(AbstractSwitch:composite(abstract))? 
		(InterfaceSwitch:composite(interface))? 
		"class" ws(space) IDENTIFIER:composite(name) ws(space) 
		(SuperClasses ws(space))?
		"{" ws(blockstart)		
		 ws(blockend) ws(indent) "}" ws(statement);
		 
	AbstractSwitch:constant("true":Boolean) -> "abstract"  ws(space);
	InterfaceSwitch:constant("true":Boolean) -> "interface"  ws(space);	
	
	SuperClasses -> "extends" ws(space) ClassRef:reference(eSuperTypes)
		(ws(empty) "," ws(space) ClassRef:reference(eSuperTypes))*;
	ClassRef:element(EClass) -> IDENTIFIER:composite(name);
		
	DataType:element(EDataType) ->
		ws(indent) "datatype" ws(space) IDENTIFIER:composite(name) ws(empty) 
			 ("["INSTANCE_CLASS_NAME:composite(instanceTypeName)"]" ws(empty))? ";" ws(statement); 		 		
		
}