syntax(Model) "models/expressions.ecore" {
	Model:element(Model) -> FunctionList;

	FunctionList -> (Function:composite(functions))*;
	
	Function:element(Function) -> "function" IDENTIFIER:composite(name) 
		"(" (Parameter:composite(parameters) ("," Parameter:composite(parameters))* )? ")" 
		"=" Expression:composite(body) ";";
	
	Parameter:element(Parameter) -> IDENTIFIER:composite(name);
	
	Expression -> Plus;
	Expression -> Minus;
	Expression -> Term;
	
	Term -> Mul;
	Term -> Div;
	Term -> Factor;
	
	Factor -> FunctionCall;
	Factor -> ParameterAccess;
	Factor -> Number;
	Factor -> "(" Expression ")";
	
	Plus:element(Plus) -> Expression:composite(op1) "+" Term:composite(op2);
	Minus:element(Minus) -> Expression:composite(op1) "-" Term:composite(op2);
	Mul:element(Mul) -> Term:composite(op1) "*" Factor:composite(op2);
	Div:element(Div) -> Term:composite(op1) "/" Factor:composite(op2);
	Number:element(Number) -> INTEGER:composite(value);
	ParameterAccess:element(ParameterAccess) -> IDENTIFIER:reference(parameter);	
	FunctionCall:element(FunctionCall) -> IDENTIFIER:reference(function)
			"(" (Expression:composite(arguments) ("," Expression:composite(arguments))* )? ")"; 
}